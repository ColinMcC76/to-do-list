{"version":3,"sources":["component/deleteButton.js","component/CheckBox.js","component/todoListComponent.js","component/todolist.js","App.js","index.js"],"names":["deleteButton","props","id","parentFunc","onClick","className","Component","CheckBox","Fragment","type","onChange","this","todoListComponent","item","state","value","checked","handleCheck","bind","setState","key","React","ToDoList","list","text","total","addItem","updateInput","deleteItem","clearAll","localStorage","getItem","storageMap","JSON","parse","window","length","slice","Math","random","push","setItem","stringify","updatedList","map","removeItem","clear","placeholder","event","target","listComp","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e5bae95.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class deleteButton extends Component {\n    constructor(props, id, parentFunc){\n        super(props)\n        this.id= id\n        // this.handleClick = this.handleClick.bind(this)\n        this.parentFunc = parentFunc\n    }\n    // handleClick(event){\n    //     // console.log(this.parentFunc)\n\n    //     this.parentFunc(event.target.id)\n    //     console.log(this.parentFunc)\n\n    // }\n    // deleteItem(id) {\n\n    //     //current copy of the list of items\n    //     const list = [...props.state.list]\n\n    //     // filter out the item by item id \n    //     const updatedList = list.filter(item => item.id !== id);\n\n    //     this.setState({\n    //         list: updatedList,\n    //         total: this.state.list.length - 1,\n\n    //     })\n    // };\n    render() {\n        // console.log(this.parentFunc)\n        return (\n            <div>\n                <button\n                    // onClick={this.handleClick}\n                    onClick={()=> this.props.parentFunc(this.props.id)}\n                    className=\"btn btn-danger\"\n                >\n                    X\n                </button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nexport default class CheckBox extends Component {\n    constructor(props, parentFunc) {\n        super(props)\n        this.parentFunc = parentFunc\n        // this.state = {\n        //     checked: false\n        // }\n        // this.handleCheck = this.handleCheck.bind(this)\n\n\n    }\n    // getInitialState() {\n    //     return { checked: true }\n    // };\n\n\n    // async handleCheck() {\n    //     await this.setState({ checked: !this.state.checked });\n    //     // console.log(this.state.checked)\n    // };\n\n\n    render() {\n        // const item= {\n        //     value: \n        // }\n        return (\n            <React.Fragment>\n                <input\n                    className='float-right'\n                    type=\"checkbox\"\n                    onChange={this.props.parentFunc}\n                    // defaultChecked={this.state.checked}\n                />\n                {/* <p className='offset-3 col-4'>\n                    {this.item.value}\n                </p> */}\n                {/* <p className={`${this.state.checked === true ? 'del':''} offset-3 col-4`}>\n                </p> */}\n            </React.Fragment>\n        )\n    }\n}\n","import React from 'react'\nimport './App.css'\nimport DeleteButton from './deleteButton'\nimport CheckBox from './CheckBox'\n\n\nexport default class todoListComponent extends React.Component {\n    constructor(props, item, parentFunc) {\n        super(props)\n        this.item = item\n        this.parentFunc = parentFunc\n        this.state={\n            id: this.props.item.id,\n            value: this.props.item.value,\n            checked: false\n        }\n        this.handleCheck=this.handleCheck.bind(this)\n    }\n    async handleCheck() {\n        await this.setState({ checked: !this.state.checked });\n        // console.log(this.state.checked)\n    };\n    render() {\n        return (\n            <li\n                className='py-2 d-flex justify-content-around'\n                // justify-content-around'\n                // key={item}\n                key={this.state.id}\n            >\n                <CheckBox parentFunc={this.handleCheck}/>\n                <p className={`${this.state.checked === true ? 'del':'' } col-4 text-center`}>\n                {/* \"text-center text-wrap\" */}\n                    {/* {item.value} */}\n                    {this.state.value}\n                </p>\n                <DeleteButton id={this.state.id} parentFunc={this.props.parentFunc} />\n            </li>\n        )\n    }\n}\n\n","import React from 'react';\nimport './App.css'\n// import CheckBox from './CheckBox'\n// import DeleteButton from './deleteButton'\nimport ToDoListComponent from './todoListComponent'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nexport default class ToDoList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            text: '',\n            total: 0,\n        };\n        this.addItem = this.addItem.bind(this);\n        this.updateInput = this.updateInput.bind(this);\n        this.deleteItem = this.deleteItem.bind(this);\n        this.clearAll = this.clearAll.bind(this);\n    };\n    async componentDidMount() {\n        if(localStorage.getItem('list') !== null){\n            let storageMap = JSON.parse(window.localStorage.getItem('list'))\n            this.setState ({\n                list: storageMap,\n                total: storageMap.length\n            })\n        }else {\n            this.setState ({\n                list: [],\n                total: 0\n            })\n        }\n\n        // console.log(storageMap.list)\n\n    }\n    \n\n    updateInput(key, value) {\n        this.setState({\n            [key]: value\n        })\n    };\n\n    addItem() {\n        //create item \n\n        if (this.state.text.slice() !== '') {\n            const text = {\n                id: 1 + Math.random(),\n                value: this.state.text.slice()\n            };\n            //copy of current list items  && ids\n            const list = [...this.state.list]\n\n            //add new item to the list\n            list.push(text);\n            // console.log(text.id)\n\n            this.setState({\n                list,\n                text: \"\",\n                total: this.state.list.length + 1,\n            })\n            // window.localStorage.addItem('id', Object.entries(text)[0][1]);\n            // window.localStorage.addItem('value', Object.entries(text)[1][1]);\n            window.localStorage.setItem('list' , JSON.stringify(list));\n        }\n    }\n\n\n\n    deleteItem(id) {\n        // console.log(id)\n\n        //current copy of the list of items\n        const list = [...this.state.list]\n        const updatedList = []\n        // console.log(list)\n        list.map(item => {\n            if (item.id !== id) {\n                // console.log('the IDs are the same',item.id)\n                updatedList.push(item)\n            }\n            // console.log(updatedList)\n\n        })\n        window.localStorage.removeItem(id)\n\n\n        // filter out the item by item.id \n        // const updatedList = list.filter(item => item.id !== id);\n        // console.log(updatedList)\n\n\n\n        this.setState({\n            list: updatedList,\n            total: this.state.list.length - 1,\n\n        })\n    };\n\n\n\n\n    clearAll() {\n        const clearedList = [];\n\n        this.setState({\n            list: clearedList,\n            total: 0,\n        })\n        localStorage.clear()\n    };\n\n\n\n\n\n\n\n\n    render() {\n        return (\n            <div className='todoListContainer'>\n                <div className=\"container-fluid d-flex justify-content-center mt-5 toDoList\">\n                    <div className=\"row border\">\n                        {/* this is the basic user interface. it contains the \n                    clear all button, the title, a total count of the todos, \n                    the user input, and a button to add the user input. */}\n                        <div className='col-12 d-flex justify-content-around pt-3'>\n                            <button type='button' className='btn btn-danger' onClick={this.clearAll}>Clear all</button>\n                            <h1 className=\"\">To-do List:</h1>\n                            <h2 className=\"\">{this.state.total} total</h2>\n                        </div>\n                        <div className='pt-3 col-12'>\n                            <input\n                                className='offset-2 col-4'\n                                type=\"text\"\n                                value={this.state.text}\n                                placeholder=\"task\"\n                                onChange={event => this.updateInput(\"text\", event.target.value)}\n                            />\n                            <button className=\"col-4\" onClick={this.addItem}>Add Item</button>\n                        </div>\n                        {/* this is where I create my list of todos, \n                        it should contain the text input from the user, \n                        a checkbox to click if its done or not, and an \n                        option to remove it from the list. each input \n                        will generate a new toDoListItem component*/}\n                        <div className='col-12'>\n                            <ul className='p-2 list-unstyled'>\n                                {this.state.list.map(listComp => {\n                                    return (\n                                        <ToDoListComponent key={listComp.id} item={listComp} parentFunc={this.deleteItem} />\n                                    )\n                                })}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n// {this.state.list.map(item => {\n    //     const listCompArr = Object.entries(item)\n    //     console.log(listCompArr)\n    //     return (\n        //         <li\n        //             className='listSpacing py-2 d-flex'\n//             // justify-content-around'\n//             key={item.id}\n//         >\n//             <CheckBox />\n//             <p className=\"col-4 text-wrap\">\n//                 {item.value}\n//             </p>\n//             <DeleteButton id={item.id} parentFunc={this.deleteItem} />\n//         </li>\n//     )\n// })}\n\n                            // const listCompArr = Object.entries(item)\n                            // console.log(listCompArr[0])\n                            // console.log(listCompArr[0][0])\n                            // console.log(listCompArr[0][1])\n                            // console.log(listCompArr[1][0])\n                            // console.log(listCompArr[1][1])\n\n                        //     return (\n                        //         <li\n                        //             className='listSpacing py-2 d-flex'\n                        //             // justify-content-around'\n                        //             // key={item}\n                        //             key={listCompArr[0][1]}\n                        //         >\n                        //             <CheckBox />\n                        //             <p className=\"col-4 text-wrap\">\n                        //                 {item.value}\n                        //                 {listCompArr[1][1]}\n                        //             </p>\n                        //             <DeleteButton id={listCompArr[0][1]} parentFunc={this.deleteItem} />\n                        //         </li>\n                        //     )\n                        // })}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport ToDoList from './component/todolist'\n\nfunction App() {\n  return (\n    <div className='app'>\n    <ToDoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}