{"version":3,"sources":["component/deleteButton.js","component/CheckBox.js","component/todoListComponent.js","component/ViewButtons.js","component/todolist.js","App.js","index.js"],"names":["deleteButton","props","id","parentFunc","onClick","className","Component","CheckBox","Fragment","type","onChange","this","handleChecked","todoListComponent","state","value","checked","handleCheck","bind","setState","item","parentFunc2","key","React","ViewButtons","viewButtonLinks","viewButtonLinksinHTML","map","link","index","updatePage","href","ToDoList","list","text","total","view","addItem","updateInput","deleteItem","clearAll","localStorage","getItem","storageMap","JSON","parse","window","length","setItem","stringify","newPage","currentPage","slice","Date","now","push","updatedList","clear","newNumber","placeholder","event","target","listComp","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86402923.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class deleteButton extends Component {\n    constructor(props, id, parentFunc){\n        super(props)\n        this.id= id\n        // this.handleClick = this.handleClick.bind(this)\n        this.parentFunc = parentFunc\n    }\n    // handleClick(event){\n    //     // console.log(this.parentFunc)\n\n    //     this.parentFunc(event.target.id)\n    //     console.log(this.parentFunc)\n\n    // }\n    // deleteItem(id) {\n\n    //     //current copy of the list of items\n    //     const list = [...props.state.list]\n\n    //     // filter out the item by item id \n    //     const updatedList = list.filter(item => item.id !== id);\n\n    //     this.setState({\n    //         list: updatedList,\n    //         total: this.state.list.length - 1,\n\n    //     })\n    // };\n    render() {\n        // console.log(this.parentFunc)\n        return (\n            <div>\n                <button\n                    // onClick={this.handleClick}\n                    onClick={()=> this.props.parentFunc(this.props.id)}\n                    className=\"btn btn-danger\"\n                >\n                    X\n                </button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nexport default class CheckBox extends Component {\n    // constructor(props) {\n    //     super(props)\n        // this.parentFunc = parentFunc\n        \n    //     // this.handleCheck = this.handleCheck.bind(this)\n\n\n    // }\n    // getInitialState() {\n    //     return { checked: true }\n    // };\n\n\n    // async handleCheck() {\n    //     await this.setState({ checked: !this.state.checked });\n    //     // console.log(this.state.checked)\n    // };\n\n    // componentDidMount() {\n    //     if(this.props.value === true) {\n    //         // console.log('it is true')\n    //         this.setState({\n    //             checked: this.props.value,\n    //         })\n    //     }\n    // }\n    \n\n\n    render() {\n        // const item= {\n        //     value: \n        // }\n        // console.log(this.props.value)\n        return (\n            <React.Fragment>\n                <input\n                    // className= {`${this.props.value === true ? 'd-none': ''}`}\n                    type=\"checkbox\"\n                    onChange={this.props.handleChecked}\n                    // checked={`${this.props.value === true}`}\n                    // defaultChecked={this.state.checked}\n                />\n                {/* <p className='offset-3 col-4'>\n                    {this.item.value}\n                </p> */}\n                {/* <p className={`${this.state.checked === true ? 'del':''} offset-3 col-4`}>\n                </p> */}\n            </React.Fragment>\n        )\n    }\n}\n","import React from 'react'\nimport './App.css'\nimport DeleteButton from './deleteButton'\nimport CheckBox from './CheckBox'\n\n\nexport default class todoListComponent extends React.Component {\n    constructor(props) {\n        // item, parentFunc\n        super(props)\n        // this.item = {}\n        // this.parentFunc = ''\n        this.state = {\n            id: \"\",//remove props out of state set a setState func\n            value: \"\",\n            checked: false\n        }\n        this.handleCheck=this.handleCheck.bind(this)\n\n    }\n    async componentDidMount() {\n        await this.setState({\n            id: this.props.item.id,//remove props out of state set a setState func\n            value: this.props.item.value,\n            checked: this.props.item.checked,\n        })\n    }\n    async handleCheck() {\n        \n        await this.setState({ checked: !this.state.checked });\n        // console.log(this.state.checked)\n        this.props.parentFunc2(this.state.id, this.state.checked)\n    };\n    render() {\n        // console.log(this.state)\n        return (\n            <li\n                className='py-2 d-flex justify-content-around'\n                // justify-content-around'\n                // key={item}\n                key={this.state.id}\n            >\n                <CheckBox value={this.state.checked}handleChecked={this.handleCheck} />\n                {/* <p className={`${this.state.checked !== true ? 'd-none' : 'text-primary'}`}>\n                    {`${this.state.checked === true ? 'COMPLETED' : ''}`}\n                </p> */}\n                <p className={`${this.state.checked === true ? 'del' : ''} col-4 text-center`}>\n                    {/* \"text-center text-wrap\" */}\n                    {/* {item.value} */}\n                    {this.state.value}\n                </p>\n                <DeleteButton id={this.state.id} parentFunc={this.props.parentFunc} />\n            </li>\n        )\n    }\n}\n\n","import React from 'react'\nexport default class ViewButtons extends React.Component {\n    constructor(props){\n        super(props)\n        this.viewButtonLinks = [\n            'All',\n            'Completed',\n            'To-Do'\n        ]\n    }\n    render() {\n        const viewButtonLinksinHTML = this.viewButtonLinks.map((link, index) => {\n            return (\n                <a\n                    onClick={() => this.props.updatePage(link)}\n                    className=\"btn btn-dark\"\n                    href=\"#\"\n                    key={index}\n                >\n                    {link}\n                </a>\n            )\n        })\n        return (\n            <h1 className=\"pt-3 col-12 d-flex justify-content-around\">\n                {viewButtonLinksinHTML}\n            </h1>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css'\nimport ToDoListComponent from './todoListComponent'\nimport ViewButtons from './ViewButtons'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nexport default class ToDoList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            text: '',\n            total: 0,\n            // completed: 0,\n            view: 'All'\n        };\n        this.addItem = this.addItem.bind(this);\n        this.updateInput = this.updateInput.bind(this);\n        this.deleteItem = this.deleteItem.bind(this);\n        this.clearAll = this.clearAll.bind(this);\n        this.handleCheck = this.handleCheck.bind(this);\n        this.updatePage = this.updatePage.bind(this);\n\n    };\n    componentDidMount() {\n        if (localStorage.getItem('list') !== null) {\n            let storageMap = JSON.parse(window.localStorage.getItem('list'))\n            // console.log(storageMap)\n            this.setState({\n                list: storageMap,\n                total: storageMap.length,\n                // completed: this.state.completed\n            });\n        } else {\n            this.setState({\n                list: [],\n                total: 0\n            })\n        }\n\n        // console.log(storageMap.list)\n\n    }\n    async handleCheck(id, checked) {\n\n        // console.log({id,checked})\n        const list = [...this.state.list]\n        // const updatedList = []\n        // console.log(list)\n        list.map(item => {\n            if (item.id === id) {\n                item.checked = checked\n            }\n        })\n\n        this.setState({\n            list: list,\n            // total: this.state.list.length - 1,\n\n        })\n        window.localStorage.setItem('list', JSON.stringify(list))\n    };\n\n    updatePage(newPage) {\n        // console.log(\"in the update page function\", newPage)\n        this.setState({ currentPage: newPage })\n    }\n\n    updateInput(key, value) {\n        this.setState({\n            [key]: value\n        })\n    };\n\n    addItem() {\n        //create item \n\n        if (this.state.text.slice() !== '') {\n            const text = {\n                id: Date.now(),\n                value: this.state.text.slice(),\n                checked: false,\n            };\n            //copy of current list items  && ids\n            var list = [...this.state.list]\n\n            //add new item to the list\n            list.push(text);\n            // console.log(text.value)\n\n            this.setState({\n                list: list,\n                text: \"\",\n                total: this.state.list.length + 1,\n\n            });\n\n            window.localStorage.setItem('list', JSON.stringify(list));\n            // console.log(JSON.stringify(this.state))\n            // window.localStorage.setItem('state of components',JSON.stringify(this.state) )\n        }\n        // if (this.state.checked === true) {\n        //     console.log('you clicked it on')\n        //     this.setState({\n        //         completed: this.state.completed + 1\n        //     })\n        // }\n    }\n\n\n\n    deleteItem(id) {\n        // console.log(id)\n\n        //current copy of the list of items\n        const list = [...this.state.list]\n        const updatedList = []\n        // console.log(list)\n        list.map(item => {\n            if (item.id !== id) {\n                updatedList.push(item)\n            }\n        })\n\n        this.setState({\n            list: updatedList,\n            total: this.state.list.length - 1,\n\n        })\n        window.localStorage.setItem('list', JSON.stringify(updatedList))\n    };\n\n\n\n\n    clearAll() {\n        const clearedList = [];\n\n        this.setState({\n            list: clearedList,\n            total: 0,\n            // completed: 0,\n        })\n        localStorage.clear()\n    };\n\n\n\n\n\n\n\n\n    render() {\n        return (\n            <div className='todoListContainer'>\n                <div className=\"container-fluid d-flex justify-content-center toDoList\">\n                    <div className=\"row\">\n                        {/* this is the basic user interface. it contains the \n                        clear all button, the title, a total count of the todos, \n                        the user input, and a button to add the user input. */}\n                        <div className='col-12 d-flex justify-content-around pt-3'>\n                            <button type='button' className='btn btn-danger' onClick={this.clearAll}>Clear all</button>\n                            <h1 className=\"text-center\">To-do List:</h1>\n                            <h2 className=\"\">{this.state.total} total</h2>\n                        </div>\n                        <ViewButtons newNumber={95} updatePage={this.updatePage} />\n                        <div className='pt-3 col-12 d-flex justify-content-around'>\n                            <input\n                                className=' btn btn-light'\n                                type=\"text\"\n                                value={this.state.text}\n                                placeholder=\"task\"\n                                onChange={event => this.updateInput(\"text\", event.target.value)}\n                            />\n                            <button className=\"btn btn-dark\" onClick={this.addItem}>Add Item</button>\n                        </div>\n                        {/* this is where I create my list of todos, \n                            it should contain the text input from the user, \n                            a checkbox to click if its done or not, and an \n                            option to remove it from the list. each input \n                            will generate a new toDoListItem component*/}\n                        {/* <h2 className={`${this.state.completed !== 0 ? 'col-12 text-center pt-2' : 'd-none'}`}>\n                                {this.state.completed} completed\n                            </h2> */}\n\n                        <div className='col-12'>\n                            <ul className='p-2 list-unstyled'>\n                                {this.state.list.map(listComp => {\n                                    return (\n                                        <ToDoListComponent key={listComp.id} item={listComp} parentFunc={this.deleteItem} parentFunc2={this.handleCheck} handleChecked={this.handleCheck} />\n                                    )\n                                })}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport ToDoList from './component/todolist'\n\nfunction App() {\n  return (\n    <div className='app'>\n    <ToDoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}