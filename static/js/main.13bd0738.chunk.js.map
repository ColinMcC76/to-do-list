{"version":3,"sources":["component/deleteButton.js","component/CheckBox.js","component/todoListComponent.js","component/todolist.js","App.js","index.js"],"names":["deleteButton","props","id","parentFunc","onClick","className","Component","CheckBox","state","checked","this","value","setState","Fragment","type","onChange","handleChecked","todoListComponent","handleCheck","bind","item","console","log","parentFunc2","key","React","ToDoList","list","text","total","completed","addItem","updateInput","deleteItem","clearAll","localStorage","getItem","storageMap","JSON","parse","window","length","map","setItem","stringify","slice","Date","now","push","updatedList","clear","placeholder","event","target","listComp","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13bd0738.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class deleteButton extends Component {\n    constructor(props, id, parentFunc){\n        super(props)\n        this.id= id\n        // this.handleClick = this.handleClick.bind(this)\n        this.parentFunc = parentFunc\n    }\n    // handleClick(event){\n    //     // console.log(this.parentFunc)\n\n    //     this.parentFunc(event.target.id)\n    //     console.log(this.parentFunc)\n\n    // }\n    // deleteItem(id) {\n\n    //     //current copy of the list of items\n    //     const list = [...props.state.list]\n\n    //     // filter out the item by item id \n    //     const updatedList = list.filter(item => item.id !== id);\n\n    //     this.setState({\n    //         list: updatedList,\n    //         total: this.state.list.length - 1,\n\n    //     })\n    // };\n    render() {\n        // console.log(this.parentFunc)\n        return (\n            <div>\n                <button\n                    // onClick={this.handleClick}\n                    onClick={()=> this.props.parentFunc(this.props.id)}\n                    className=\"btn btn-danger\"\n                >\n                    X\n                </button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nexport default class CheckBox extends Component {\n    constructor(props) {\n        super(props)\n        // this.parentFunc = parentFunc\n        this.state = {\n            checked: false\n        }\n    //     // this.handleCheck = this.handleCheck.bind(this)\n\n\n    // }\n    // getInitialState() {\n    //     return { checked: true }\n    // };\n\n\n    // async handleCheck() {\n    //     await this.setState({ checked: !this.state.checked });\n    //     // console.log(this.state.checked)\n    };\n\n    componentDidMount() {\n        if(this.props.value === true) {\n            // console.log('it is true')\n            this.setState({\n                checked: this.props.value,\n            })\n        }\n    }\n    \n\n\n    render() {\n        // const item= {\n        //     value: \n        // }\n        // console.log(this.props.value)\n        return (\n            <React.Fragment>\n                <input\n                    className= {`${this.props.value === true ? 'd-none': ''}`}\n                    type=\"checkbox\"\n                    onChange={this.props.handleChecked}\n                    // defaultChecked={this.state.checked}\n                />\n                {/* <p className='offset-3 col-4'>\n                    {this.item.value}\n                </p> */}\n                {/* <p className={`${this.state.checked === true ? 'del':''} offset-3 col-4`}>\n                </p> */}\n            </React.Fragment>\n        )\n    }\n}\n","import React from 'react'\nimport './App.css'\nimport DeleteButton from './deleteButton'\nimport CheckBox from './CheckBox'\n\n\nexport default class todoListComponent extends React.Component {\n    constructor(props) {\n        // item, parentFunc\n        super(props)\n        // this.item = {}\n        // this.parentFunc = ''\n        this.state = {\n            id: \"\",//remove props out of state set a setState func\n            value: \"\",\n            checked: false\n        }\n        this.handleCheck=this.handleCheck.bind(this)\n    }\n    async componentDidMount() {\n        await this.setState({\n            id: this.props.item.id,//remove props out of state set a setState func\n            value: this.props.item.value,\n            checked: this.props.item.checked,\n        })\n    }\n    async handleCheck() {\n        \n        await this.setState({ checked: !this.state.checked });\n        console.log(this.state.checked)\n        this.props.parentFunc2(this.state.id, this.state.checked)\n    };\n    render() {\n        // console.log(this.state)\n        return (\n            <li\n                className='py-2 d-flex justify-content-around'\n                // justify-content-around'\n                // key={item}\n                key={this.state.id}\n            >\n                <CheckBox value={this.state.checked} handleChecked={this.handleCheck} />\n                {/* <p className={`${this.state.checked !== true ? 'd-none' : 'text-primary'}`}>\n                    {`${this.state.checked === true ? 'COMPLETED' : ''}`}\n                </p> */}\n                <p className={`${this.state.checked === true ? 'del' : ''} col-4 text-center`}>\n                    {/* \"text-center text-wrap\" */}\n                    {/* {item.value} */}\n                    {this.state.value}\n                </p>\n                <DeleteButton id={this.state.id} parentFunc={this.props.parentFunc} />\n            </li>\n        )\n    }\n}\n\n","import React from 'react';\nimport './App.css'\n// import CheckBox from './CheckBox'\n// import DeleteButton from './deleteButton'\nimport ToDoListComponent from './todoListComponent'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nexport default class ToDoList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            text: '',\n            total: 0,\n            completed: 0,\n        };\n        this.addItem = this.addItem.bind(this);\n        this.updateInput = this.updateInput.bind(this);\n        this.deleteItem = this.deleteItem.bind(this);\n        this.clearAll = this.clearAll.bind(this);\n        this.handleCheck = this.handleCheck.bind(this);\n\n    };\n    componentDidMount() {\n        if (localStorage.getItem('list') !== null) {\n            let storageMap = JSON.parse(window.localStorage.getItem('list'))\n            console.log(storageMap)\n            this.setState({\n                list: storageMap,\n                total: storageMap.length,\n                completed: this.state.completed\n            });\n        } else {\n            this.setState({\n                list: [],\n                total: 0\n            })\n        }\n\n        // console.log(storageMap.list)\n\n    }\n    async handleCheck(id, checked) {\n        // await this.setState({ checked: !this.state.checked });\n        // console.log({id,checked})\n        const list = [...this.state.list]\n        // const updatedList = []\n        // console.log(list)\n        list.map(item => {\n            if (item.id === id) {\n                item.checked = checked\n                if (checked === true) {\n                    console.log('you clicked it on')\n                    this.setState({\n                        completed: this.state.completed + 1\n                    })\n                } else {\n                    console.log('you clicked it off')\n                    this.setState({\n                        completed: this.state.completed - 1\n                    })\n                }\n            }\n        })\n\n        this.setState({\n            list: list,\n            // total: this.state.list.length - 1,\n\n        })\n        window.localStorage.setItem('list', JSON.stringify(list))\n    };\n\n    updateInput(key, value) {\n        this.setState({\n            [key]: value\n        })\n    };\n\n    addItem() {\n        //create item \n\n        if (this.state.text.slice() !== '') {\n            const text = {\n                id: Date.now(),\n                value: this.state.text.slice(),\n                checked: false,\n            };\n            //copy of current list items  && ids\n            var list = [...this.state.list]\n\n            //add new item to the list\n            list.push(text);\n            // console.log(text.value)\n\n            this.setState({\n                list: list,\n                text: \"\",\n                total: this.state.list.length + 1,\n\n            });\n\n            window.localStorage.setItem('list', JSON.stringify(list));\n            // console.log(JSON.stringify(this.state))\n            // window.localStorage.setItem('state of components',JSON.stringify(this.state) )\n        }\n        if (this.state.checked === true) {\n            console.log('you clicked it on')\n            this.setState({\n                completed: this.state.completed + 1\n            })\n        }\n    }\n\n\n\n    deleteItem(id) {\n        // console.log(id)\n\n        //current copy of the list of items\n        const list = [...this.state.list]\n        const updatedList = []\n        // console.log(list)\n        list.map(item => {\n            if (item.id !== id) {\n                updatedList.push(item)\n            }\n        })\n\n        this.setState({\n            list: updatedList,\n            total: this.state.list.length - 1,\n\n        })\n        window.localStorage.setItem('list', JSON.stringify(updatedList))\n    };\n\n\n\n\n    clearAll() {\n        const clearedList = [];\n\n        this.setState({\n            list: clearedList,\n            total: 0,\n            completed: 0,\n        })\n        localStorage.clear()\n    };\n\n\n\n\n\n\n\n\n    render() {\n        return (\n            <div className='todoListContainer'>\n                <div className=\"container-fluid d-flex justify-content-center toDoList\">\n                    <div className=\"row\">\n                        {/* this is the basic user interface. it contains the \n                    clear all button, the title, a total count of the todos, \n                    the user input, and a button to add the user input. */}\n                        <div className='col-12 d-flex justify-content-around pt-3'>\n                            <button type='button' className='btn btn-danger' onClick={this.clearAll}>Clear all</button>\n                            <h1 className=\"text-center\">To-do List:</h1>\n                            <h2 className=\"\">{this.state.total} total</h2>\n\n                        </div>\n                        <div className='pt-3 col-12 d-flex justify-content-around'>\n                            <input\n                                className=' btn btn-light'\n                                type=\"text\"\n                                value={this.state.text}\n                                placeholder=\"task\"\n                                onChange={event => this.updateInput(\"text\", event.target.value)}\n                            />\n                            <button className=\"btn btn-dark\" onClick={this.addItem}>Add Item</button>\n                        </div>\n                        {/* this is where I create my list of todos, \n                        it should contain the text input from the user, \n                        a checkbox to click if its done or not, and an \n                        option to remove it from the list. each input \n                        will generate a new toDoListItem component*/}\n                        <h2 className={`${this.state.completed !== 0 ? 'col-12 text-center pt-2' : 'd-none'}`}>\n                            {this.state.completed} completed\n                            </h2>\n                        <div className='col-12'>\n                            <ul className='p-2 list-unstyled'>\n                                {this.state.list.map(listComp => {\n                                    return (\n                                        <ToDoListComponent key={listComp.id} item={listComp} parentFunc={this.deleteItem} parentFunc2={this.handleCheck} handleChecked={this.handleCheck} />\n                                    )\n                                })}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n// {this.state.list.map(item => {\n    //     const listCompArr = Object.entries(item)\n    //     console.log(listCompArr)\n    //     return (\n        //         <li\n        //             className='listSpacing py-2 d-flex'\n//             // justify-content-around'\n//             key={item.id}\n//         >\n//             <CheckBox />\n//             <p className=\"col-4 text-wrap\">\n//                 {item.value}\n//             </p>\n//             <DeleteButton id={item.id} parentFunc={this.deleteItem} />\n//         </li>\n//     )\n// })}\n\n                            // const listCompArr = Object.entries(item)\n                            // console.log(listCompArr[0])\n                            // console.log(listCompArr[0][0])\n                            // console.log(listCompArr[0][1])\n                            // console.log(listCompArr[1][0])\n                            // console.log(listCompArr[1][1])\n\n                        //     return (\n                        //         <li\n                        //             className='listSpacing py-2 d-flex'\n                        //             // justify-content-around'\n                        //             // key={item}\n                        //             key={listCompArr[0][1]}\n                        //         >\n                        //             <CheckBox />\n                        //             <p className=\"col-4 text-wrap\">\n                        //                 {item.value}\n                        //                 {listCompArr[1][1]}\n                        //             </p>\n                        //             <DeleteButton id={listCompArr[0][1]} parentFunc={this.deleteItem} />\n                        //         </li>\n                        //     )\n                        // })}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport ToDoList from './component/todolist'\n\nfunction App() {\n  return (\n    <div className='app'>\n    <ToDoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}